on:
  push:
    branches: [ develop ]

name: DEV - Create GH Tag Release

jobs:
  app-version-management:
    name: App version management
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python-version: [ "3.12" ]
    outputs:
      artifact-version: ${{ steps.artifact.outputs.version }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.AUTOMATION_GITHUB_API_TOKEN }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install poetry==1.6.1 --upgrade pip
        poetry config virtualenvs.create false

    - name: Increasing application version
      id: artifact
      run: |
        poetry version patch
        echo "version=$(poetry version -sq)" >> $GITHUB_OUTPUT

    - name: Commit new version
      run: |
        git config --global user.name 'Automation-CI-CD'
        git config --global user.email 'info@example.com'
        git pull
        git commit -m "[skip ci] Increasing Application patch version to ${{ steps.artifact.outputs.version }}" pyproject.toml
        git push -u origin develop

    - name: Create new Github Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        tag_name: ${{ steps.artifact.outputs.version }}
        name: Release ${{ steps.artifact.outputs.version }}
        target_commitish: ${{ github.ref }}
        draft: false
        prerelease: false
